#
# Debian base image
#

ARG DEBIAN_SUITE=buster

FROM docker.io/library/debian:${DEBIAN_SUITE}-slim

# Create a non-root user for running builds
# GHA wants uid 1001
ARG UID=1001

RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked \
    --mount=target=/var/cache/apt,type=cache,sharing=locked \
    set -eux; \
    # create an unprivileged user for builds
    useradd -u "$UID" --create-home --user-group builder; \
    # fixed build directories
    mkdir -m 750 /src /target /install /install/bin; \
    chown builder:builder /src /target /install /install/bin; \
    # re-enable apt caching (we have a cache mount)
    rm -f /etc/apt/apt.conf.d/docker-clean; \
    # enable packages from multiple architectures
    dpkg --add-architecture amd64; \
    dpkg --add-architecture armhf; \
    dpkg --add-architecture arm64; \
    dpkg --add-architecture i386; \
    # install native C compilers, CI utilities, and qemu
    apt-get update; \
    apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        curl \
        gcc \
        git \
        libc6-dev \
        qemu-user \
        qemu-user-binfmt \
        tar \
        zstd \
    ;

# Directories for Rust sources and installed binaries
VOLUME ["/src", "/install"]

# Install rustup and platform-native target
#
#    RUST_VERSIONS: list of version numbers or strings
#                   like `stable`. The first entry becomes the
#                   default toolchain version.
#
#      RUSTUP_ARCH: native architecture as llvm platform triple
#
#   RUSTUP_VERSION: version of rustup to download
#
#    RUSTUP_SHA256: checksum for this version of rustup on
#                   ${RUST_ARCH}.
#
# Default values are provided only for x86_64.
ARG RUST_VERSIONS="stable" \
    RUSTUP_ARCH="x86_64-unknown-linux-gnu" \
    RUSTUP_VERSION="1.27.1" \
    RUSTUP_SHA256="6aeece6993e902708983b209d04c0d1dbb14ebb405ddb87def578d41f920f56d" \
    RUSTUP_URL=""

# Basic cargo/rust configuration, including a `cargo install`
# location of `/install`.
ENV PATH=/install/bin:/usr/local/cargo/bin:$PATH \
    CARGO_INSTALL_ROOT=/install \
    CARGO_TARGET_DIR=/target \
    CARGO_TERM_COLOR=always \
    RUST_BACKTRACE=1 \
    RUSTUP_HOME=/usr/local/rustup

# Instructions adapted from official Docker image
# <https://github.com/rust-lang/docker-rust/blob/master/Dockerfile-slim.template>
RUN set -eux; \
    export CARGO_HOME=/usr/local/cargo; \
    [ -n "${RUSTUP_URL:-}" ] || RUSTUP_URL="https://static.rust-lang.org/rustup/archive/${RUSTUP_VERSION}/${RUSTUP_ARCH}/rustup-init"; \
    curl -O -sSf "$RUSTUP_URL"; \
    echo "${RUSTUP_SHA256} *rustup-init" | sha256sum -c -; \
    chmod +x rustup-init; \
    default_rust="$(echo "$RUST_VERSIONS" | cut -f1 -d' ')"; \
    ./rustup-init -y --no-modify-path --profile minimal --default-toolchain "$default_rust"; \
    rm rustup-init; \
    rustup --version; \
    cargo --version; \
    rustc --version; \
    rustup set auto-self-update disable; \
    echo "$RUST_VERSIONS" | xargs rustup toolchain add --profile minimal; \
    (umask 022 && echo "$RUSTUP_ARCH" >/etc/rust-native-arch)

# Install scripts
COPY rootfiles/ /
